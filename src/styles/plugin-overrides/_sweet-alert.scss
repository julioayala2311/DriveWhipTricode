// Plugin: ngx-sweetalert2
// github: https://github.com/sweetalert2/ngx-sweetalert2

.swal2-container {
  .swal2-popup {
    font-size: $font-size-base;
    background: var(--#{$prefix}body-bg);
    box-shadow: var(--#{$prefix}box-shadow);
    border: 1px solid var(--#{$prefix}border-color);
    
    &.swal2-toast {
      box-shadow: var(--#{$prefix}box-shadow);
      background: var(--#{$prefix}body-bg);
    }

    .swal2-title {
      font-size: 25px;
      line-height: 1;
      font-weight: 500;
      color: var(--#{$prefix}body-color);
      margin-bottom: 0;
    }

    .swal2-html-container {
      font-size: $font-size-base;
      color: $secondary;
      font-weight: initial;
      margin-top: 11px;
      text-decoration: none;
    }

    .swal2-actions {
      button {
        @extend .btn;
        &.swal2-confirm {
          @extend .btn-primary;
          &:focus {
            box-shadow: none;
          }
        }
        &.swal2-cancel {
          @extend .btn-danger;
          @extend .border-danger;
        }
        svg {
          width: 16px;
          height: 16px;
        }
      }
    }

    .swal2-close {
      font-size: 22px;
      &:focus {
        box-shadow: none;
      }
    }

    .swal2-timer-progress-bar {
      background: $secondary;
    }

  }
}

// RTL fix (unused; removed empty ruleset to satisfy linter)

/* Employment profile popup â€“ global styles so they apply to SweetAlert content appended to <body> */
.employment-profile-popup {
  .swal2-html-container { text-align: left !important; margin: 0; max-height: 72vh; overflow-y: auto; }
  .swal2-popup { max-height: 80vh; }
}

.employment-profile {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  max-height: 70vh; overflow-y: auto; padding-right: .25rem;
}

.employment-profile .ep-header {
  display: flex; gap: .85rem; align-items: center;
  border: 1px solid var(--#{$prefix}border-color);
  border-radius: 12px; padding: .75rem .9rem; background: var(--#{$prefix}body-bg);
}
.employment-profile .ep-avatar { width: 48px; height: 48px; border-radius: 50%; object-fit: cover; box-shadow: 0 2px 8px rgba(0,0,0,.12); }
.employment-profile .ep-avatar.ep-initials { display:flex; align-items:center; justify-content:center; background: rgba(var(--#{$prefix}primary-rgb,13,110,253), .12); color: var(--#{$prefix}primary); font-weight:700; }
.employment-profile .ep-name { font-weight:700; font-size:1.05rem; }
.employment-profile .ep-sub { color: var(--#{$prefix}secondary-color); font-size: .85rem; }
.employment-profile .ep-sub .sep { opacity:.5; margin: 0 .25rem; }
.employment-profile .ep-tags { display:flex; gap:.35rem; margin-top:.25rem; flex-wrap: wrap; }
.employment-profile .tag { display:inline-block; padding:.15rem .45rem; border-radius:999px; font-size:.7rem; font-weight:600; background: rgba(var(--#{$prefix}primary-rgb,13,110,253), .12); color: var(--#{$prefix}primary); }
.employment-profile .tag.muted{ background: var(--#{$prefix}secondary-bg); color: var(--#{$prefix}secondary-color); }

/* Grid rows label/value */
.employment-profile .profile-row { display:grid; grid-template-columns: minmax(140px, 220px) 1fr; align-items: baseline; column-gap:.75rem; row-gap:.1rem; font-size:.92rem; padding:.25rem 0; }
.employment-profile .profile-row .label { min-width:140px; color: var(--#{$prefix}secondary-color); font-weight:600; }
.employment-profile .profile-row .label::after { content:":"; opacity:.5; margin-left:.15rem; }
.employment-profile .profile-row .value { word-break: break-word; }
.employment-profile .profile-row .value a { color: var(--#{$prefix}primary); text-decoration: none; }
.employment-profile .profile-row .value a:hover { text-decoration: underline; }

/* Accordion container like the reference image */
.employment-profile .accordion-stack { display:flex; flex-direction:column; gap:0; border: 1px solid var(--#{$prefix}border-color); border-radius:12px; background: var(--#{$prefix}body-bg); box-shadow: 0 14px 32px -24px rgba(15,23,42,.45); overflow:hidden; }
.employment-profile details.acc { background: var(--#{$prefix}body-bg); }
.employment-profile details.acc > summary { list-style:none; cursor:pointer; padding:.9rem 1rem; display:flex; align-items:center; justify-content:space-between; user-select:none; font-weight:700; }
.employment-profile .accordion-stack details.acc:not(:first-child) > summary { border-top: 1px solid var(--#{$prefix}border-color); }
.employment-profile details.acc > summary::-webkit-details-marker { display:none; }
.employment-profile .acc-title { font-weight:700; font-size:.9rem; text-transform:uppercase; letter-spacing:.25px; }
/* plus/minus */
.employment-profile .acc-caret { position:relative; width:16px; height:16px; flex:0 0 16px; opacity:.7; }
.employment-profile .acc-caret::before, .employment-profile .acc-caret::after { content:""; position:absolute; background: currentColor; border-radius:1px; }
.employment-profile .acc-caret::before { top:50%; left:0; right:0; height:2px; transform: translateY(-50%); }
.employment-profile .acc-caret::after { left:50%; top:0; bottom:0; width:2px; transform: translateX(-50%); }
.employment-profile details.acc[open] .acc-caret::after { opacity:0; }
.employment-profile .acc-body { padding:1rem 1.25rem; border-top: 1px solid var(--#{$prefix}border-color); }
.employment-profile details.acc > summary:hover { background: var(--#{$prefix}secondary-bg); }

/* nested accordions inside section bodies */
.employment-profile .acc-body details.acc { margin-top: .5rem; border: 1px solid var(--#{$prefix}border-color); border-radius: 8px; }
.employment-profile .acc-body details.acc > summary { padding: .6rem .75rem; }
.employment-profile .acc-body details.acc .acc-body { padding: .75rem .9rem; }

@media (max-width: 480px){
  .employment-profile .profile-row { grid-template-columns: 1fr; }
  .employment-profile .profile-row .label::after { content: none; }
}

/* dark mode tweaks */
body.dark .employment-profile .accordion-stack { box-shadow: 0 14px 32px -24px rgba(0,0,0,.8); }
body.dark .employment-profile .acc-body { border-top-color: rgba(255,255,255,.12); }
body.dark .employment-profile .accordion-stack details.acc:not(:first-child) > summary { border-top-color: rgba(255,255,255,.12); }